# https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions
name: XCrawler - Build & Tests

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
on:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
  pull_request:
    branches: [ develop ]
    types: [ opened, synchronize ]

jobs:
  build:

    runs-on: [ ARM64 ]

    services:
      mysql:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: xcrawler
        ports:
          - 3306:3306

      redis:
        image: redis
        ports:
          - 6379:6379

      mongo:
        image: mongo:bionic
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        env:
          runner: self-hosted
        with:
          php-version: ${{ matrix.php }}
          extensions: mongodb-1.13, redis, pcov

      - name: Setup application
        if: success()
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          composer install --no-ansi --no-scripts --no-progress --prefer-dist
          php artisan key:generate
          chmod -R 777 storage bootstrap/cache
          php artisan config:clear
          php artisan migrate:fresh

  test:
    needs: build

    runs-on: [ ARM64 ]

    steps:
      - name: Lint
        run: composer lint

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        if: success()
        run: |
          composer test-coverage

      - name: Coverage
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: coverage
          path: coverage.xml

      - name: upload coverage to codecov.io
        uses: codecov/codecov-action@v1
        if: success()
        with:
          file: ./coverage.xml

      - name: Notifications
        uses: act10ns/slack@v1.5.0
        if: success()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          config: .github/config/slack.yml
